# Library Management System - Relational Database  
**A Complete MySQL Database Schema**  
*Designed & Generated by Timothy Gaius  
`Version: 1.0.0 | Date: October 29, 2025`

---

## Overview

This project implements a **full-featured relational database** for a **Library Management System** using **MySQL**. It supports:

- Book cataloging with authors, publishers, and categories  
- Member registration and membership lifecycle  
- Borrowing & returning books with copy tracking  
- Reservations with auto-expiry  
- Fine management and audit trail  
- Data integrity via constraints, triggers, and indexes  

Perfect for libraries, schools, or any organization managing physical books.

---

## Database Features

| Feature | Description |
|-------|-----------|
| **9 Core Tables** | `authors`, `categories`, `publishers`, `books`, `book_categories`, `members`, `borrowings`, `reservations`, `fines` |
| **Relationships** | One-to-Many, Many-to-Many, Self-referencing |
| **Constraints** | `PRIMARY KEY`, `FOREIGN KEY`, `UNIQUE`, `NOT NULL`, `CHECK` |
| **Triggers** | Auto-decrement/increment book copies, generate membership IDs |
| **Indexes** | Optimized for search by title, ISBN, member, status, dates |
| **Audit Fields** | `created_at`, `updated_at` on key tables |
| **Scalable Design** | Supports thousands of books and members |

---

## Schema Diagram (Conceptual)
[authors] 1----N [books] N----1 [publishers]
|              |
|              N
|            [book_categories]
|              |
|              N
|            [categories] (self: parent_category_id)
|
N
[members] 1----N [borrowings] N----1 [books]
|
N
[reservations] (member + book + status)
|
N
[fines] ← linked to borrowings
text---

## File Structure
library_management_system.sql
└── Complete MySQL script with:
• CREATE DATABASE
• All CREATE TABLE statements
• Constraints & Relationships
• Triggers
• Indexes
• Sample data (commented)
text---

## How to Use

### 1. Prerequisites
- MySQL 8.0 or higher
- Access to a MySQL client (CLI, phpMyAdmin, MySQL Workbench, etc.)

### 2. Import the Database

```bash
mysql -u your_username -p < library_management_system.sql

You will be prompted for your password.

3. Connect to the Database
sqlUSE library_management_system;
4. Start Managing Your Library!
sql-- View all books
SELECT b.title, a.first_name, a.last_name, p.name AS publisher 
FROM books b
JOIN authors a ON b.author_id = a.author_id
JOIN publishers p ON b.publisher_id = p.publisher_id;

-- Find overdue books
SELECT m.first_name, m.last_name, b.title, br.due_date
FROM borrowings br
JOIN members m ON br.member_id = m.member_id
JOIN books b ON br.book_id = b.book_id
WHERE br.status = 'Borrowed' AND br.due_date < CURDATE();

Key Business Rules Enforced

































RuleEnforced ByCannot borrow if no copies availableTrigger + CHECK constraintAvailable copies ≤ total copiesCHECK constraintMembership ID auto-generated (e.g., LIB-2025-00123)TriggerOne active reservation per book per memberUNIQUE constraintFines tracked separately for auditNormalized fines tableMembership expiry > start dateCHECK constraint

Sample Queries
Top 5 Most Borrowed Books
sqlSELECT b.title, COUNT(br.borrow_id) as borrow_count
FROM borrowings br
JOIN books b ON br.book_id = b.book_id
WHERE br.status IN ('Returned', 'Borrowed')
GROUP BY b.book_id, b.title
ORDER BY borrow_count DESC
LIMIT 5;
Members with Unpaid Fines
sqlSELECT m.membership_id, m.first_name, m.last_name, SUM(f.amount) as total_due
FROM fines f
JOIN members m ON f.member_id = m.member_id
WHERE f.status = 'Unpaid'
GROUP BY m.member_id;

Future Enhancements (Optional)

 Add staff and admin roles with login system
 Email/SMS notifications for due dates
 Digital book lending (PDF/EPUB)
 Reporting dashboard (SQL views/materialized views)
 Full-text search on book summaries
 Barcode/QR code support for check-in/out


Author
 Built by Timothy Gaius
Intelligent. Helpful. Truth-seeking.

License
This database schema is released under the MIT License.
Use, modify, and distribute freely.


Ready to run. Production-grade. Fully documented.
Just import and start managing your library today!
